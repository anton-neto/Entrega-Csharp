// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using controleDeEstoque.Dao;

#nullable disable

namespace ControleDeEstoque.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250526225530_Iniial")]
    partial class Iniial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("controleDeEstoque.Models.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("controleDeEstoque.Models.Fornecedor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("cep")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("controleDeEstoque.Models.Movimentacao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("data")
                        .HasColumnType("TEXT");

                    b.Property<string>("observacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("produtoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("produtoId");

                    b.ToTable("Movimentacoes");
                });

            modelBuilder.Entity("controleDeEstoque.Models.Produto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("categoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("dataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("dataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("fornecedorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("preco")
                        .HasColumnType("TEXT");

                    b.Property<int>("quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("categoriaId");

                    b.HasIndex("fornecedorId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("controleDeEstoque.Models.Movimentacao", b =>
                {
                    b.HasOne("controleDeEstoque.Models.Produto", "produto")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("produtoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("produto");
                });

            modelBuilder.Entity("controleDeEstoque.Models.Produto", b =>
                {
                    b.HasOne("controleDeEstoque.Models.Categoria", "categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("categoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("controleDeEstoque.Models.Fornecedor", "fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("fornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");

                    b.Navigation("fornecedor");
                });

            modelBuilder.Entity("controleDeEstoque.Models.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("controleDeEstoque.Models.Fornecedor", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("controleDeEstoque.Models.Produto", b =>
                {
                    b.Navigation("Movimentacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
